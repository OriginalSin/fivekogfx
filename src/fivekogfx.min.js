/*
 Copyright (c) 2017 fiveko.com
 See the LICENSE file for copying permission.
*/
function FivekoGFX(h){function c(b){try{return b.getContext("webgl",{premultipliedAlpha:!1})||b.getContext("experimental-webgl",{premultipliedAlpha:!1})}catch(a){console.log("ERROR: %o",a)}return null}function d(b,a){var e=new XMLHttpRequest;e.open("GET",b,!1);e.onreadystatechange=function(){4!==e.readyState||200!==e.status&&0!=e.status||a(e.responseText);return a("")};e.send(null)}function f(b){var a=b.createTexture();b.bindTexture(b.TEXTURE_2D,a);b.pixelStorei(b.UNPACK_FLIP_Y_WEBGL,!0);b.texParameteri(b.TEXTURE_2D,
b.TEXTURE_MIN_FILTER,b.LINEAR);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.LINEAR);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);return a}function g(b,a,e){var d=b.getAttribLocation(a,"a_position"),c=b.getUniformLocation(a,"u_image");b.getUniformLocation(a,"u_matrix");a=b.getUniformLocation(a,"u_textureSize");b.vertexAttribPointer(d,2,b.FLOAT,!1,0,0);b.enableVertexAttribArray(d);var d=b.canvas.width,f=b.canvas.height;
b.bindFramebuffer(b.FRAMEBUFFER,e);b.uniform2f(a,d,f);b.uniform1i(c,0);b.viewport(0,0,d,f);b.drawArrays(b.TRIANGLES,0,6)}this.gl=h?c(h):c(document.createElement("canvas"));this.params={};this.programs={};this.sources={};FivekoGFX.prototype.createProgram=function(b,a,e){function d(b,a){var e=c.createShader(b);c.shaderSource(e,a);c.compileShader(e);return c.getShaderParameter(e,c.COMPILE_STATUS)?e:(alert("An error occurred compiling the shaders: "+c.getShaderInfoLog(e)),null)}var c=this.gl,f=this.programs[b];
if(f)return f;e=e?d(c.VERTEX_SHADER,e):d(c.VERTEX_SHADER,"attribute vec2 a_position;                     \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvoid main() { gl_Position = vec4(a_position, 0.0, 1.0); }");a=d(c.FRAGMENT_SHADER,a);f=c.createProgram();c.attachShader(f,e);c.attachShader(f,a);c.linkProgram(f);c.getProgramParameter(f,c.LINK_STATUS)?this.programs[b]=f:alert("Unable to initialize the shader program.");return f};FivekoGFX.prototype.createProgramFromFile=function(b,a,e,c){d(a,function(a){""!==a?
(a=createProgram(b,a),c(a)):c(null)})};FivekoGFX.prototype.deleteProgram=function(b){var a=this.gl,e=this.programs[b];e&&(a.deleteProgram(e),this.programs[b]=null)};FivekoGFX.prototype.initialize=function(b,a){var e=this.gl,c=e.canvas;if(!this.originalImageTexture||c.width!=b||c.height!=a){c.width=b;c.height=a;this.originalImageTexture=f(e);for(var d=[],g=[],h=0;2>h;++h){var k=f(e);d.push(k);e.texImage2D(e.TEXTURE_2D,0,e.RGBA,c.width,c.height,0,e.RGBA,e.UNSIGNED_BYTE,null);var l=e.createFramebuffer();
g.push(l);e.bindFramebuffer(e.FRAMEBUFFER,l);e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,k,0)}c=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,c);e.bufferData(e.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,-1,1,-1,1,1,-1,1,1]),e.STATIC_DRAW);this.textures=d;this.framebuffers=g;this.count=0}};FivekoGFX.prototype.load=function(b){var a=this.gl;this.initialize(b.width,b.height);var e=window.performance.now();a.bindTexture(a.TEXTURE_2D,this.originalImageTexture);a.texImage2D(a.TEXTURE_2D,
0,a.RGBA,a.RGBA,a.UNSIGNED_BYTE,b);console.log("Image loaded!Elapsed: "+(window.performance.now()-e).toString())};FivekoGFX.prototype.loadOLD=function(b){var a=this.gl,e=window.performance.now();var c=f(a);var d=a.canvas,g=(480<document.documentElement.clientWidth?480:document.documentElement.clientWidth-100)/Math.max(b.width,b.height);d.width=g*b.width;d.height=g*b.height;g=document.createElement("canvas");g.width=d.width;g.height=d.height;g.getContext("2d").drawImage(b,0,0,g.width,g.height);console.log("Texture created!");
a.texImage2D(a.TEXTURE_2D,0,a.RGBA,a.RGBA,a.UNSIGNED_BYTE,g);this.originalImageTexture=c;console.log("Image loaded!Elapsed: "+(window.performance.now()-e).toString());b=[];e=[];for(g=0;2>g;++g){c=f(a);b.push(c);a.texImage2D(a.TEXTURE_2D,0,a.RGBA,d.width,d.height,0,a.RGBA,a.UNSIGNED_BYTE,null);var h=a.createFramebuffer();e.push(h);a.bindFramebuffer(a.FRAMEBUFFER,h);a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,c,0)}c=a.createBuffer();a.bindBuffer(a.ARRAY_BUFFER,c);a.bufferData(a.ARRAY_BUFFER,
new Float32Array([-1,-1,1,-1,-1,1,-1,1,1,-1,1,1]),a.STATIC_DRAW);a.bindTexture(a.TEXTURE_2D,this.originalImageTexture);this.textures=b;this.framebuffers=e;this.count=0};FivekoGFX.prototype.renderto=function(b,a){g(this.gl,b,a)};FivekoGFX.prototype.draw=function(b){var a=this.gl,e=this.createProgram("draw","precision mediump float;                                   \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tuniform sampler2D u_image;                                  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tuniform vec2 u_textureSize;                                 \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvoid main() {                                               \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;       \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgl_FragColor = texture2D(u_image, textCoord/*vec2(textCoord.x, 1.0 - textCoord.y)*/ );          \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}                                                           ");
a.useProgram(e);g(a,e,null);this.count=0;b&&b.getContext("2d").drawImage(a.canvas,0,0)};FivekoGFX.prototype.readPixels=function(b){var a=this.gl;b||(b={data:new Uint8Array(a.canvas.width*a.canvas.height*4),width:a.canvas.width,height:a.canvas.height});a.readPixels(0,0,a.canvas.width,a.canvas.height,a.RGBA,a.UNSIGNED_BYTE,b.data);return b};FivekoGFX.prototype.execute=function(b){var a=this.gl;g(a,b,this.framebuffers[this.count%2]);a.bindTexture(a.TEXTURE_2D,this.textures[this.count%2]);++this.count}}
FivekoGFX.params={};FivekoGFX.sources={};FivekoGFX.sourceText=function(h,c){return FivekoGFX.sources[h]};
FivekoGFX.prototype.loadShaders=function(h){function c(b,a){var e=document.getElementById(a);if(!e)return null;var c="",d=e.firstChild;for(console.log(b);d;)d.nodeType==d.TEXT_NODE&&(c+=d.textContent),d=d.nextSibling;if("x-shader/x-fragment"==e.type)e=b.createShader(b.FRAGMENT_SHADER);else if("x-shader/x-vertex"==e.type)e=b.createShader(b.VERTEX_SHADER);else return null;b.shaderSource(e,c);b.compileShader(e);return b.getShaderParameter(e,b.COMPILE_STATUS)?e:(alert("An error occurred compiling the shaders: "+
b.getShaderInfoLog(e)),null)}var d=this.gl,f=c(d,h[0]);h=c(d,h[1]);var g=d.createProgram();d.attachShader(g,h);d.attachShader(g,f);d.linkProgram(g);d.getProgramParameter(g,d.LINK_STATUS)||alert("Unable to initialize the shader program.");return g};(function(h){function c(c,f){var d=c.gl,b=c.createProgram("sobel","\nprecision mediump float;\n\n#define KERNEL_SIZE 3\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\nuniform float u_kernel[KERNEL_SIZE];\n#define M_PI 3.1415926535897932384626433832795\n#define GET_PIXEL(_x, _y) (texture2D(u_image, textCoord + onePixel*vec2(_x, _y)))\n \n\nvoid main() {\n\tvec2 onePixel = vec2(1.0, 1.0) / u_textureSize;\n\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;\n\tfloat dx = (length(GET_PIXEL(-1, -1)*u_kernel[0] +\n\t\t\t\tGET_PIXEL(-1,  0)*u_kernel[1] +\n\t\t\t\tGET_PIXEL(-1, +1)*u_kernel[2]) -\n\t\t\t   length(GET_PIXEL(+1, -1)*u_kernel[0] +\n\t\t\t\tGET_PIXEL(+1,  0)*u_kernel[1] +\n\t\t\t\tGET_PIXEL(+1, +1)*u_kernel[2]));\n\tfloat dy = (length(GET_PIXEL(-1, -1)*u_kernel[0] +\n\t\t\t\tGET_PIXEL(0, -1)*u_kernel[1] +\n\t\t\t\tGET_PIXEL(+1, -1)*u_kernel[2]) -\n\t\t\t   length(GET_PIXEL(-1, +1)*u_kernel[0] +\n\t\t\t\tGET_PIXEL(0, +1)*u_kernel[1] +\n\t\t\t\tGET_PIXEL(+1, +1)*u_kernel[2]));\n\n///gl_FragColor = vec4(vec3(length(vec2(dx, dy))), 1.0);\n   float theta = (atan(dy, dx) + M_PI) / (2.0*M_PI);\n   //vec3 v = vec3(length(vec2(dx, dy)));\n   gl_FragColor = vec4(length(vec2(dx, dy)), theta, 0.0, 1.0);\n}");
d.useProgram(b);var a=d.getUniformLocation(b,"u_kernel[0]");d.uniform1fv(a,f);c.execute(b);d=c.gl;b=c.createProgram("edgeNMS","\nprecision mediump float;\n\n#define KERNEL_SIZE 3\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\n#define M_PI 3.1415926535897932384626433832795\n\nvoid main() {\n\tvec2 onePixel = vec2(1.0, 1.0) / u_textureSize;\n\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;\n\tvec4 cc = texture2D(u_image, textCoord);   \n\tfloat theta = degrees(cc.y*M_PI*2.0); \n\tint ax = 0, ay = 0; \n\tif ((theta >= 337.5) || (theta < 22.5))       { ax = 1; ay = 0; }\n\telse if ((theta >= 22.5) && (theta < 67.5))   { ax = 1; ay = 1; }\n\telse if ((theta >= 67.5) && (theta < 112.5))  { ax = 0; ay = 1; }\n\telse if ((theta >= 112.5) && (theta < 157.5)) { ax =-1; ay = 1; }\n\telse if ((theta >= 157.5) && (theta < 202.5)) { ax =-1; ay = 0; }\n\telse if ((theta >=202.5) && (theta < 247.5))  { ax =-1; ay =-1; }\n\telse if ((theta >=247.5) && (theta < 292.5))  { ax = 0; ay =-1; }\n\telse if ((theta >= 292.5) && (theta < 337.5)) { ax = 1; ay =-1; }\n\n\tvec4 ca = texture2D(u_image, textCoord + onePixel*vec2(ax, ay));\n\tvec4 cb = texture2D(u_image, textCoord + onePixel*vec2(-ax, -ay));\n\tgl_FragColor = vec4((((cc.x <= ca.x) || (cc.x < cb.x)) ? vec3(0) : vec3(cc.x)), 1.0);\n}");
d.useProgram(b);c.execute(b)}h.prototype.sobel=function(){c(this,[1,2,1])};h.prototype.schaar=function(){c(this,[3,10,3])}})(window.FivekoGFX);(function(h){h.prototype.gauss=function(c){var d=this.gl,f=this.params.gauss;if(!f||f.sigma!==c){var f=Math.sqrt(2*Math.PI)*c,g=0,b=2*c*c,a,e=new Float32Array(15);var h=0;for(a=-7;15>h;a++,h++)e[h]=Math.exp(-(a*a)/b)/f,g+=e[h];for(a=0;15>a;a++)e[a]/=g;f={sigma:c,kernel:e};this.params.gauss=f}c=this.createProgram("gauss","\nprecision mediump float;\n\n// our texture\nuniform sampler2D u_image;\n\n#define KERNEL_SIZE 15\nuniform vec2 u_textureSize;\nuniform int u_direction;\nuniform float u_kernel[KERNEL_SIZE];\nvoid main() {\n\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;\n\tvec2 onePixel = ((u_direction == 0) ? vec2(1.0, 0.0) : vec2(0.0, 1.0)) / u_textureSize;\n\tvec4 meanColor = vec4(0);\n\tint ms = KERNEL_SIZE / 2;\n\tfor (int i = 0; i < KERNEL_SIZE; i++)\n\t{\n\t\tmeanColor += texture2D(u_image, textCoord  + onePixel*vec2(i - ms))*u_kernel[i];\n\t}\n\tgl_FragColor = meanColor;\n}");
g=f.kernel;d.useProgram(c);b=d.getUniformLocation(c,"u_kernel[0]");f=d.getUniformLocation(c,"u_direction");d.uniform1fv(b,g);for(g=0;2>g;g++)d.uniform1i(f,g),this.execute(c)}})(window.FivekoGFX);(function(h){h.sources.mean="\nprecision mediump float;\n\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\nvoid main() {\n\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;\n\tvec2 onePixel = vec2(1.0, 1.0) / u_textureSize;\n\tgl_FragColor = (\n\t\ttexture2D(u_image, textCoord + onePixel*vec2(-1.0, -1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(0.0, -1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(1.0, -1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(-1.0, 0.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(0.0,  0.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(1.0,  0.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(-1.0, 1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(0.0,  1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(1.0,  1.0))) / 9.0;\n}";
h.prototype.mean=function(){var c=this.gl,d=this.createProgram("mean","\nprecision mediump float;\n\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\nvoid main() {\n\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;\n\tvec2 onePixel = vec2(1.0, 1.0) / u_textureSize;\n\tgl_FragColor = (\n\t\ttexture2D(u_image, textCoord + onePixel*vec2(-1.0, -1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(0.0, -1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(1.0, -1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(-1.0, 0.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(0.0,  0.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(1.0,  0.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(-1.0, 1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(0.0,  1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(1.0,  1.0))) / 9.0;\n}");
c.useProgram(d);this.execute(d)};h.prototype.blur=function(c){c=12*c*c/8;var d=this.gl,f=this.createProgram("mean","\nprecision mediump float;\n\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\nvoid main() {\n\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;\n\tvec2 onePixel = vec2(1.0, 1.0) / u_textureSize;\n\tgl_FragColor = (\n\t\ttexture2D(u_image, textCoord + onePixel*vec2(-1.0, -1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(0.0, -1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(1.0, -1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(-1.0, 0.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(0.0,  0.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(1.0,  0.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(-1.0, 1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(0.0,  1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(1.0,  1.0))) / 9.0;\n}");
d.useProgram(f);for(d=0;d<c;d++)this.execute(f)}})(window.FivekoGFX);(function(h){h.prototype.symmetricnn=function(c,d){var f=this.params.symmetricnn;f&&f.size!==c&&this.deleteProgram("symmetricnn");this.params.symmetricnn={size:c};var g=this.gl,f=this.createProgram("symmetricnn","\nprecision mediump float;\n\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\nuniform int u_pixelsCount;\n#define KERNEL_SIZE %kernelSize%\n#define HALF_SIZE (KERNEL_SIZE / 2)\n\nvoid main() {\n\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;\n\tvec2 onePixel = vec2(1.0, 1.0) / u_textureSize;\n\tvec4 meanColor = vec4(0);\n\tvec4 v = texture2D(u_image, textCoord);\n\tint count = 0;\n\tfor (int y = 0; y <= HALF_SIZE; y++){\n\t\tfor (int x = -HALF_SIZE; x <= HALF_SIZE; x++){\n\t\t\tvec4 v1 = texture2D(u_image, textCoord + vec2(x, y) * onePixel);  \n\t\t\tvec4 v2 = texture2D(u_image, textCoord + vec2(-x, -y) * onePixel);\n\t\t\tvec4 d1 = abs(v - v1);\n\t\t\tvec4 d2 = abs(v - v2);\n\t\t\tvec4 rv = vec4(((d1[0] < d2[0]) ? v1[0] : v2[0]),\n\t\t\t\t\t\t\t((d1[1] < d2[1]) ? v1[1] : v2[1]),\n\t\t\t\t\t\t\t((d1[2] < d2[2]) ? v1[2] : v2[2]),1);\n\t\t\tmeanColor += rv;\n\t\t}\n\t}\n\tgl_FragColor = meanColor / float(u_pixelsCount);\n}".replace(/%kernelSize%/g,
c));g.useProgram(f);var b=(c+!(c%2))*((c+!(c%2))/2+.5),a=g.getUniformLocation(f,"u_pixelsCount");g.uniform1i(a,b);console.log("size:"+c+" count: "+b);for(g=0;g<d;g++)this.execute(f)}})(window.FivekoGFX);(function(h){h.prototype.houghCircle=function(c){var d=this.gl,f=this.createProgram("houghCircle","\nprecision mediump float;\n\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\nuniform float u_r;\n#define M_PI 3.1415926535897932384626433832795\n#define PHI_STEP M_PI/180.0\n\nvoid main() {\n\tvec2 onePixel = vec2(1.0, 1.0) / u_textureSize;\n\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;\n\tvec4 sum = vec4(0.0);\n\tfloat phi = 0.0;\n\tfor (int i = 0; i < 360; i++)\n\t{\n\t\tphi += PHI_STEP;\n\t\tsum += texture2D(u_image, textCoord + onePixel*vec2(u_r*cos(phi), u_r*sin(phi)));\n\t}\n\t\n\tgl_FragColor = vec4(vec3(sum / 360.0), 1.0);\n}");
d.useProgram(f);d.uniform1f(d.getUniformLocation(f,"u_r"),c);this.execute(f)}})(window.FivekoGFX);(function(h){h.prototype.rgb2grey=function(){var c=this.gl,d=this.createProgram("rgb2grey","\nprecision mediump float;\n\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\nvec4 scale = vec4(0.257,  0.504,  0.098, 0.0);\nvoid main() {\n\tvec4 color = texture2D(u_image, gl_FragCoord.xy / u_textureSize);\n\tgl_FragColor = vec4(vec3(length(color*scale)), color.a);\n}");c.useProgram(d);this.execute(d)};h.prototype.rgb2ycbcr=function(){var c=this.gl,d=this.createProgram("rgb2ycbcr",
"\nprecision mediump float; \n\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize; \nmat4 scale =   mat4(0.257,  0.504,  0.098, 0.0, \n                   -0.148, -0.291,  0.439, 0.0, \n                    0.439, -0.368, -0.071, 0.0, \n                    1.0, 1.0,  1.0, 1.0 );\n\nvoid main() {\n\tvec4 color = texture2D(u_image, gl_FragCoord.xy / u_textureSize);\n\tgl_FragColor = color*scale + vec4(0.0625, 0.5, 0.5, 0);\n}");c.useProgram(d);this.execute(d)};h.prototype.ycbcr2rgb=
function(){var c=this.gl,d=this.createProgram("ycbcr2rgb","\nprecision mediump float;\n\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\nmat4 scale =   mat4(1.164,  0.000,  1.596, 0.0,\n                    1.164, -0.392, -0.813, 0.0,\n                    1.164,  2.017,  0.000, 0.0,\n                    1.0, 1.0,  1.0, 1.0 );\n\nvoid main() {\n\tvec4 color = texture2D(u_image, gl_FragCoord.xy / u_textureSize);\n\tgl_FragColor = (color- vec4(0.0625, 0.5, 0.5, 0))*scale ;\n}");
c.useProgram(d);this.execute(d)};h.prototype.skinMask=function(){var c=this.gl,d=this.createProgram("skinMask","\nprecision mediump float;\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\nvec4 thr = vec4(80.0/255.0, 120.0/255.0, 133.0/255.0, 173.0/255.0);\nvoid main() {\n\tvec4 color = texture2D(u_image, gl_FragCoord.xy / u_textureSize);\n\tgl_FragColor = vec4(vec3(( (color[0] > thr[0]) && \n\t\t\t\t(color[1] >= thr[0]) && (color[1] <= thr[1]) && \n\t\t\t\t(color[2] >= thr[2]) && (color[2] <=thr[3])) ? 1.0 : 0.0), \n\t\t\t\tcolor.a);\n}");
this.rgb2ycbcr();c.useProgram(d);this.execute(d)};h.prototype.rgb2xyz=function(){var c=this.gl,d=this.createProgram("rgb2xyz","\nprecision mediump float;\n\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\n#define SCALE(_c) (((_c) > 0.04045) ? (pow(((_c) + 0.055 ) / 1.055, 2.4)) : ((_c)/ 12.92))\nmat4 scale =   mat4(0.4124,  0.3576,  0.1805, 0.0, \n                    0.2126,  0.7152,  0.0722, 0.0, \n                    0.0193,  0.1192,  0.9505, 0.0, \n                    1.0, 1.0,  1.0, 1.0 );\nvoid main() {\n\tvec4 color = texture2D(u_image, gl_FragCoord.xy / u_textureSize);\n\tvec4 rgb = vec4(SCALE(color.r), SCALE(color.g), SCALE(color.b), color.a); \n\tgl_FragColor = rgb*scale;\n}");
c.useProgram(d);this.execute(d)};h.prototype.rgb2hsl=function(){var c=this.gl,d=this.createProgram("rgb2hsl","\nprecision mediump float;\n\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\n#define HLSMAX 6.0 // 240.0/255.0 \n#define RGBMAX 1.0 \n#define UNDEFINED (HLSMAX*2.0/3.0)\n\nvoid main() {\n\tvec4 color = texture2D(u_image, gl_FragCoord.xy / u_textureSize);\n\tfloat cMin = min(min(color.r, color.g), color.b);\n\tfloat cMax = max(max(color.r, color.g), color.b);\n\tfloat L = (((cMax+cMin)) )/(2.0);\n\tfloat delta = (cMax - cMin);\n\t\n\tif (cMin == cMax){\n\t\tgl_FragColor = vec4(vec3(0, 0, L), color.a); \n\t\treturn;\n\t}\n\t// Calc Saturation\n   float S = ((L > 0.5) ? (delta / (2.0 - cMax - cMin)) : (delta / (cMax + cMin)));\n\t\n\t// Calc Hue\n\tfloat H = (color.r == cMax) ? (((color.g - color.b) / delta)) :\n\t\t      ((color.g == cMax) ? (2.0 + (color.b - color.r) / delta) :\n\t\t                  ((4.0 + (color.r - color.g) / delta)));\n\tH += ((H < 0.0) ? (HLSMAX) : 0.0);\n\tgl_FragColor = vec4(vec3(H, S, L), color.a);\n}");
c.useProgram(d);this.execute(d)}})(window.FivekoGFX);(function(h){function c(c,g){function b(a,b){return e[a+1]-e[b+1]}function a(a){for(var c=0;4>c;c++){var d=a+p[c];if(0===e[d]){e[d]=e[a];var g=f[a+0]+f[d+0]>>>1,k=f[a+0]-f[d+0],l=f[a+1]-f[d+1],m=f[a+2]-f[d+2];e[d+1]=Math.sqrt(((512+g)*k*k>>8)+4*l*l+((767-g)*m*m>>8));h.push(d,b)}}}for(var e=new c.data.constructor(new ArrayBuffer(c.data.length)),f=c.data,h=new d,p=[-4,4,4*-c.width,4*c.width],m=4*c.width,k=0,l=m*c.height;k<m;k+=4)e[k]=e[k+l]=255;k=0;for(l=c.height*m;k<l;k+=m)e[k]=e[k+m-1]=255;k=0;for(l=
g.length;g[k];k++)for(var l=g[k].pixels,n=0,q=l.length;n<q;n++)e[l[n]]=80*(k+1),a(l[n]);for(;!h.empty();)l=h.pop(),a(l);k=m+4;for(l=m*c.height-m;k<l;k+=4)160==e[k]&&(f[k+1]=f[k+2]=255*p.reduce(function(a,b){return a|e[k]^e[k+b]},0))}var d=function(){this.nodes=[]};d.prototype.push=function(c,d){for(var b=this.nodes,a=0,e=b.length;a<e;){var f=a+e>>>1;0>d(c,b[f])?a=f+1:e=f}b.splice(a,0,c)};d.prototype.pop=function(){return this.nodes.pop()};d.prototype.empty=function(){return 0===this.nodes.length};
d.prototype.size=function(){return this.nodes.length};h.prototype.watershed=function(d,g){var b=d.getContext("2d"),a=b.getImageData(0,0,d.width,d.height);c(a,g);b.putImageData(a,0,0)}})(window.FivekoGFX);
