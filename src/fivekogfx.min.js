/*
 Copyright (c) 2017 fiveko.com
 See the LICENSE file for copying permission.
*/
function FivekoGFX(h){function e(a){try{return a.getContext("webgl",{premultipliedAlpha:!1})||a.getContext("experimental-webgl",{premultipliedAlpha:!1})}catch(b){console.log("ERROR: %o",b)}return null}function c(a,b){var d=new XMLHttpRequest;d.open("GET",a,!1);d.onreadystatechange=function(){4!==d.readyState||200!==d.status&&0!=d.status||b(d.responseText);return b("")};d.send(null)}function g(a){var b=a.createTexture();a.bindTexture(a.TEXTURE_2D,b);a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,!0);a.texParameteri(a.TEXTURE_2D,
a.TEXTURE_MIN_FILTER,a.LINEAR);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.LINEAR);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE);return b}function f(a,b,d){var e=a.getAttribLocation(b,"a_position"),m=a.getUniformLocation(b,"u_image");a.getUniformLocation(b,"u_matrix");b=a.getUniformLocation(b,"u_textureSize");a.vertexAttribPointer(e,2,a.FLOAT,!1,0,0);a.enableVertexAttribArray(e);var e=a.canvas.width,c=a.canvas.height;
a.bindFramebuffer(a.FRAMEBUFFER,d);a.uniform2f(b,e,c);a.uniform1i(m,0);a.viewport(0,0,e,c);a.drawArrays(a.TRIANGLES,0,6)}this.gl=h?e(h):e(document.createElement("canvas"));this.params={};this.programs={};this.sources={};FivekoGFX.prototype.createProgram=function(a,b,d){function e(a,b){var d=c.createShader(a);c.shaderSource(d,b);c.compileShader(d);return c.getShaderParameter(d,c.COMPILE_STATUS)?d:(alert("An error occurred compiling the shaders: "+c.getShaderInfoLog(d)),null)}var c=this.gl,g=this.programs[a];
if(g)return g;d=d?e(c.VERTEX_SHADER,d):e(c.VERTEX_SHADER,"attribute vec2 a_position;                     \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvoid main() { gl_Position = vec4(a_position, 0.0, 1.0); }");b=e(c.FRAGMENT_SHADER,b);g=c.createProgram();c.attachShader(g,d);c.attachShader(g,b);c.linkProgram(g);c.getProgramParameter(g,c.LINK_STATUS)?this.programs[a]=g:alert("Unable to initialize the shader program.");return g};FivekoGFX.prototype.createProgramFromFile=function(a,b,d,e){c(b,function(b){""!==b?
(b=createProgram(a,b),e(b)):e(null)})};FivekoGFX.prototype.deleteProgram=function(a){var b=this.gl,d=this.programs[a];d&&(b.deleteProgram(d),this.programs[a]=null)};FivekoGFX.prototype.initialize=function(a,b){var d=this.gl,c=d.canvas;if(!this.originalImageTexture||c.width!=a||c.height!=b){c.width=a;c.height=b;this.originalImageTexture=g(d);for(var e=[],f=[],h=0;2>h;++h){var k=g(d);e.push(k);d.texImage2D(d.TEXTURE_2D,0,d.RGBA,c.width,c.height,0,d.RGBA,d.UNSIGNED_BYTE,null);var l=d.createFramebuffer();
f.push(l);d.bindFramebuffer(d.FRAMEBUFFER,l);d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,d.TEXTURE_2D,k,0)}c=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,c);d.bufferData(d.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,-1,1,-1,1,1,-1,1,1]),d.STATIC_DRAW);this.textures=e;this.framebuffers=f;this.count=0}};FivekoGFX.prototype.load=function(a){var b=this.gl;this.initialize(a.width,a.height);var d=window.performance.now();b.bindTexture(b.TEXTURE_2D,this.originalImageTexture);b.texImage2D(b.TEXTURE_2D,
0,b.RGBA,b.RGBA,b.UNSIGNED_BYTE,a);console.log("Image loaded!Elapsed: "+(window.performance.now()-d).toString())};FivekoGFX.prototype.loadOLD=function(a){var b=this.gl,d=window.performance.now();var c=g(b);var e=b.canvas,f=(480<document.documentElement.clientWidth?480:document.documentElement.clientWidth-100)/Math.max(a.width,a.height);e.width=f*a.width;e.height=f*a.height;f=document.createElement("canvas");f.width=e.width;f.height=e.height;f.getContext("2d").drawImage(a,0,0,f.width,f.height);console.log("Texture created!");
b.texImage2D(b.TEXTURE_2D,0,b.RGBA,b.RGBA,b.UNSIGNED_BYTE,f);this.originalImageTexture=c;console.log("Image loaded!Elapsed: "+(window.performance.now()-d).toString());a=[];d=[];for(f=0;2>f;++f){c=g(b);a.push(c);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,e.width,e.height,0,b.RGBA,b.UNSIGNED_BYTE,null);var h=b.createFramebuffer();d.push(h);b.bindFramebuffer(b.FRAMEBUFFER,h);b.framebufferTexture2D(b.FRAMEBUFFER,b.COLOR_ATTACHMENT0,b.TEXTURE_2D,c,0)}c=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,c);b.bufferData(b.ARRAY_BUFFER,
new Float32Array([-1,-1,1,-1,-1,1,-1,1,1,-1,1,1]),b.STATIC_DRAW);b.bindTexture(b.TEXTURE_2D,this.originalImageTexture);this.textures=a;this.framebuffers=d;this.count=0};FivekoGFX.prototype.renderto=function(a,b){f(this.gl,a,b)};FivekoGFX.prototype.draw=function(a){var b=this.gl,d=this.createProgram("draw","precision mediump float;                                   \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tuniform sampler2D u_image;                                  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tuniform vec2 u_textureSize;                                 \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvoid main() {                                               \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;       \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgl_FragColor = texture2D(u_image, textCoord/*vec2(textCoord.x, 1.0 - textCoord.y)*/ );          \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}                                                           ");
b.useProgram(d);f(b,d,null);this.count=0;a&&a.getContext("2d").drawImage(b.canvas,0,0)};FivekoGFX.prototype.readPixels=function(a){var b=this.gl;a||(a={data:new Uint8Array(b.canvas.width*b.canvas.height*4),width:b.canvas.width,height:b.canvas.height});b.readPixels(0,0,b.canvas.width,b.canvas.height,b.RGBA,b.UNSIGNED_BYTE,a.data);return a};FivekoGFX.prototype.execute=function(a){var b=this.gl;f(b,a,this.framebuffers[this.count%2]);b.bindTexture(b.TEXTURE_2D,this.textures[this.count%2]);++this.count}}
FivekoGFX.params={};FivekoGFX.sources={};FivekoGFX.sourceText=function(h,e){return FivekoGFX.sources[h]};
FivekoGFX.prototype.loadShaders=function(h){function e(a,b){var d=document.getElementById(b);if(!d)return null;var c="",e=d.firstChild;for(console.log(a);e;)e.nodeType==e.TEXT_NODE&&(c+=e.textContent),e=e.nextSibling;if("x-shader/x-fragment"==d.type)d=a.createShader(a.FRAGMENT_SHADER);else if("x-shader/x-vertex"==d.type)d=a.createShader(a.VERTEX_SHADER);else return null;a.shaderSource(d,c);a.compileShader(d);return a.getShaderParameter(d,a.COMPILE_STATUS)?d:(alert("An error occurred compiling the shaders: "+
a.getShaderInfoLog(d)),null)}var c=this.gl,g=e(c,h[0]);h=e(c,h[1]);var f=c.createProgram();c.attachShader(f,h);c.attachShader(f,g);c.linkProgram(f);c.getProgramParameter(f,c.LINK_STATUS)||alert("Unable to initialize the shader program.");return f};(function(h){function e(c,e){var f=c.gl,a=c.createProgram("sobel","\nprecision mediump float;\n\n#define KERNEL_SIZE 3\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\nuniform float u_kernel[KERNEL_SIZE];\n#define M_PI 3.1415926535897932384626433832795\n#define GET_PIXEL(_x, _y) (texture2D(u_image, textCoord + onePixel*vec2(_x, _y)))\n \n\nvoid main() {\n\tvec2 onePixel = vec2(1.0, 1.0) / u_textureSize;\n\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;\n\tfloat dx = (length(GET_PIXEL(-1, -1)*u_kernel[0] +\n\t\t\t\tGET_PIXEL(-1,  0)*u_kernel[1] +\n\t\t\t\tGET_PIXEL(-1, +1)*u_kernel[2]) -\n\t\t\t   length(GET_PIXEL(+1, -1)*u_kernel[0] +\n\t\t\t\tGET_PIXEL(+1,  0)*u_kernel[1] +\n\t\t\t\tGET_PIXEL(+1, +1)*u_kernel[2]));\n\tfloat dy = (length(GET_PIXEL(-1, -1)*u_kernel[0] +\n\t\t\t\tGET_PIXEL(0, -1)*u_kernel[1] +\n\t\t\t\tGET_PIXEL(+1, -1)*u_kernel[2]) -\n\t\t\t   length(GET_PIXEL(-1, +1)*u_kernel[0] +\n\t\t\t\tGET_PIXEL(0, +1)*u_kernel[1] +\n\t\t\t\tGET_PIXEL(+1, +1)*u_kernel[2]));\n\n///gl_FragColor = vec4(vec3(length(vec2(dx, dy))), 1.0);\n   float theta = (atan(dy, dx) + M_PI) / (2.0*M_PI);\n   gl_FragColor = vec4(length(vec2(dx, dy)), theta, 0.0, 1.0);\n}");
f.useProgram(a);var b=f.getUniformLocation(a,"u_kernel[0]");f.uniform1fv(b,e);c.execute(a);f=c.gl;a=c.createProgram("edgeNMS","\nprecision mediump float;\n\n#define KERNEL_SIZE 3\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\n#define M_PI 3.1415926535897932384626433832795\n\nvoid main() {\n\tvec2 onePixel = vec2(1.0, 1.0) / u_textureSize;\n\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;\n\tvec4 cc = texture2D(u_image, textCoord);   \n\tfloat theta = degrees(cc.y*M_PI*2.0); \n\tint ax = 0, ay = 0; \n\tif ((theta >= 337.5) || (theta < 22.5))       { ax = 1; ay = 0; }\n\telse if ((theta >= 22.5) && (theta < 67.5))   { ax = 1; ay = 1; }\n\telse if ((theta >= 67.5) && (theta < 112.5))  { ax = 0; ay = 1; }\n\telse if ((theta >= 112.5) && (theta < 157.5)) { ax =-1; ay = 1; }\n\telse if ((theta >= 157.5) && (theta < 202.5)) { ax =-1; ay = 0; }\n\telse if ((theta >=202.5) && (theta < 247.5))  { ax =-1; ay =-1; }\n\telse if ((theta >=247.5) && (theta < 292.5))  { ax = 0; ay =-1; }\n\telse if ((theta >= 292.5) && (theta < 337.5)) { ax = 1; ay =-1; }\n\n\tvec4 ca = texture2D(u_image, textCoord + onePixel*vec2(ax, ay));\n\tvec4 cb = texture2D(u_image, textCoord + onePixel*vec2(-ax, -ay));\n\tgl_FragColor = vec4((((cc.x <= ca.x) || (cc.x < cb.x)) ? vec3(0) : vec3(cc.x)), 1.0);\n}");
f.useProgram(a);c.execute(a)}h.prototype.sobel=function(){e(this,[1,2,1])};h.prototype.schaar=function(){e(this,[3,10,3])}})(window.FivekoGFX);(function(h){h.prototype.gauss=function(e){var c=this.gl,g=this.params.gauss;if(!g||g.sigma!==e){var g=Math.sqrt(2*Math.PI)*e,f=0,a=2*e*e,b,d=new Float32Array(15);var h=0;for(b=-7;15>h;b++,h++)d[h]=Math.exp(-(b*b)/a)/g,f+=d[h];for(b=0;15>b;b++)d[b]/=f;g={sigma:e,kernel:d};this.params.gauss=g}e=this.createProgram("gauss","\nprecision mediump float;\n\n// our texture\nuniform sampler2D u_image;\n\n#define KERNEL_SIZE 15\nuniform vec2 u_textureSize;\nuniform int u_direction;\nuniform float u_kernel[KERNEL_SIZE];\nvoid main() {\n\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;\n\tvec2 onePixel = ((u_direction == 0) ? vec2(1.0, 0.0) : vec2(0.0, 1.0)) / u_textureSize;\n\tvec4 meanColor = vec4(0);\n\tint ms = KERNEL_SIZE / 2;\n\tfor (int i = 0; i < KERNEL_SIZE; i++)\n\t{\n\t\tmeanColor += texture2D(u_image, textCoord  + onePixel*vec2(i - ms))*u_kernel[i];\n\t}\n\tgl_FragColor = meanColor;\n}");
f=g.kernel;c.useProgram(e);a=c.getUniformLocation(e,"u_kernel[0]");g=c.getUniformLocation(e,"u_direction");c.uniform1fv(a,f);for(f=0;2>f;f++)c.uniform1i(g,f),this.execute(e)}})(window.FivekoGFX);(function(h){h.sources.mean="\nprecision mediump float;\n\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\nvoid main() {\n\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;\n\tvec2 onePixel = vec2(1.0, 1.0) / u_textureSize;\n\tgl_FragColor = (\n\t\ttexture2D(u_image, textCoord + onePixel*vec2(-1.0, -1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(0.0, -1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(1.0, -1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(-1.0, 0.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(0.0,  0.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(1.0,  0.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(-1.0, 1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(0.0,  1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(1.0,  1.0))) / 9.0;\n}";
h.prototype.mean=function(){var e=this.gl,c=this.createProgram("mean","\nprecision mediump float;\n\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\nvoid main() {\n\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;\n\tvec2 onePixel = vec2(1.0, 1.0) / u_textureSize;\n\tgl_FragColor = (\n\t\ttexture2D(u_image, textCoord + onePixel*vec2(-1.0, -1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(0.0, -1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(1.0, -1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(-1.0, 0.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(0.0,  0.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(1.0,  0.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(-1.0, 1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(0.0,  1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(1.0,  1.0))) / 9.0;\n}");
e.useProgram(c);this.execute(c)};h.prototype.blur=function(e){e=12*e*e/8;var c=this.gl,g=this.createProgram("mean","\nprecision mediump float;\n\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\nvoid main() {\n\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;\n\tvec2 onePixel = vec2(1.0, 1.0) / u_textureSize;\n\tgl_FragColor = (\n\t\ttexture2D(u_image, textCoord + onePixel*vec2(-1.0, -1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(0.0, -1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(1.0, -1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(-1.0, 0.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(0.0,  0.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(1.0,  0.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(-1.0, 1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(0.0,  1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(1.0,  1.0))) / 9.0;\n}");
c.useProgram(g);for(c=0;c<e;c++)this.execute(g)}})(window.FivekoGFX);(function(h){h.prototype.symmetricnn=function(e,c){var g=this.params.symmetricnn;g&&g.size!==e&&this.deleteProgram("symmetricnn");this.params.symmetricnn={size:e};var f=this.gl,g=this.createProgram("symmetricnn","\nprecision mediump float;\n\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\nuniform int u_pixelsCount;\n#define KERNEL_SIZE %kernelSize%\n#define HALF_SIZE (KERNEL_SIZE / 2)\n\nvoid main() {\n\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;\n\tvec2 onePixel = vec2(1.0, 1.0) / u_textureSize;\n\tvec4 meanColor = vec4(0);\n\tvec4 v = texture2D(u_image, textCoord);\n\tint count = 0;\n\tfor (int y = 0; y <= HALF_SIZE; y++){\n\t\tfor (int x = -HALF_SIZE; x <= HALF_SIZE; x++){\n\t\t\tvec4 v1 = texture2D(u_image, textCoord + vec2(x, y) * onePixel);  \n\t\t\tvec4 v2 = texture2D(u_image, textCoord + vec2(-x, -y) * onePixel);\n\t\t\tvec4 d1 = abs(v - v1);\n\t\t\tvec4 d2 = abs(v - v2);\n\t\t\tvec4 rv = vec4(((d1[0] < d2[0]) ? v1[0] : v2[0]),\n\t\t\t\t\t\t\t((d1[1] < d2[1]) ? v1[1] : v2[1]),\n\t\t\t\t\t\t\t((d1[2] < d2[2]) ? v1[2] : v2[2]),1);\n\t\t\tmeanColor += rv;\n\t\t}\n\t}\n\tgl_FragColor = meanColor / float(u_pixelsCount);\n}".replace(/%kernelSize%/g,
e));f.useProgram(g);var a=(e+!(e%2))*((e+!(e%2))/2+.5),b=f.getUniformLocation(g,"u_pixelsCount");f.uniform1i(b,a);console.log("size:"+e+" count: "+a);for(f=0;f<c;f++)this.execute(g)}})(window.FivekoGFX);(function(h){h.prototype.houghCircle=function(e){var c=this.gl,g=this.createProgram("houghCircle","\nprecision mediump float;\n\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\nuniform float u_r;\n#define M_PI 3.1415926535897932384626433832795\n#define PHI_STEP M_PI/180.0\n\nvoid main() {\n\tvec2 onePixel = vec2(1.0, 1.0) / u_textureSize;\n\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;\n\tvec4 sum = vec4(0.0);\n\tfloat phi = 0.0;\n\tfor (int i = 0; i < 360; i++)\n\t{\n\t\tphi += PHI_STEP;\n\t\tsum += texture2D(u_image, textCoord + onePixel*vec2(u_r*cos(phi), u_r*sin(phi)));\n\t}\n\t\n\tgl_FragColor = vec4(vec3(sum / 360.0), 1.0);\n}");
c.useProgram(g);c.uniform1f(c.getUniformLocation(g,"u_r"),e);this.execute(g)}})(window.FivekoGFX);
